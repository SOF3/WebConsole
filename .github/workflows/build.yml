name: Build
on:
  push:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run: npm install
        working-directory: site
      - uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown
      - run: wget -O - https://github.com/thedodd/trunk/releases/download/v0.16.0/trunk-x86_64-unknown-linux-gnu.tar.gz | tar xz trunk
      - run: ../trunk build --release --public-url /WebConsole/
        working-directory: site
      - run: wget -O - https://github.com/casey/just/releases/download/1.13.0/just-1.13.0-x86_64-unknown-linux-musl.tar.gz | tar xz just
      - run: ./just composer install --ignore-platform-reqs && ./just build && cp local/WebConsole.phar site/dist
      - uses: actions/upload-pages-artifact@v1
        with:
          path: site/dist
      - uses: actions/upload-artifact@v3
        with:
          name: poggit-raw
          path: local/WebConsole
  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-20.04
    if: github.ref_type == 'branch' && github.ref_name == 'master'
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
  stage-poggit:
    name: Stage Poggit source branch
    runs-on: ubuntu-20.04
    needs: build
    permissions:
      contents: write
    concurrency:
      group: poggit/${{github.ref}}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - run: |
          git fetch origin
          git checkout poggit/${{github.ref_name}} || git checkout --orphan poggit/${{github.ref_name}}
          git clean -dxff && git rm -fr .
      - run: |
          echo <<EOF >.poggit.yml
          projects:
            WebConsole:
              type: plugin
              compressBuilds: false
              fullGzip: false
          EOF
      - uses: actions/download-artifact@v3
        with:
          name: poggit-raw
          path: .
      - run: |
          git add -A
          git \
            -c user.name="github-actions[bot]" \
            -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit --allow-empty -am "${{github.event.head_commit.message}} (${{github.sha}})"
          git push origin poggit/${{github.ref_name}}

  stage-composer:
    name: Stage Composer dist branch
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        module: [api, lib]
    concurrency:
      group: pharynx/${{github.ref}}/${{matrix.module}}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir /tmp/composer-stage
          cp -r plugin/${{matrix.module}}/src /tmp/composer-stage/src
      - name: prepare composer.json
        run: |
          <plugin/${{matrix.module}}/composer.json jq \
            --arg ref_name "${{github.ref_name}}" \
            --arg ref_type "${{github.ref_type}}" \
            '{
              name,
              type,
              require: .require | with_entries(
                if .key | startswith("sof3/webconsole-") then
                  {
                    key,
                    value: (
                      if $ref_type == "branch" then
                        "dev-" + $ref_name
                      else
                        "^" + ($ref_name | ltrimstr("v"))
                      end
                    )
                  }
                else
                  .
                end
              ),
              autoload,
              authors,
              license,
            } +  if has("x-virion") then {"x-virion"} else null end' >/tmp/composer-stage/composer.json
      - uses: actions/checkout@v3
        with:
          repository: SOF3/webconsole-${{matrix.module}}
          ssh-key: ${{matrix.module == 'api' && secrets.API_DEPLOY_KEY || secrets.LIB_DEPLOY_KEY}}
          path: ..mirror
      - name: push to mirror
        run: |
          cd ..mirror
          if [ ${{github.ref_type}} == "branch" ]; then
            BRANCH=${{github.ref_name}}
          else
            BRANCH=release/${{github.ref_name}}
          fi
          git fetch origin
          git checkout $BRANCH || git checkout -b $BRANCH
          git rm -r src composer.json || true
          mv /tmp/composer-stage/{composer.json,src} .
          git add -A
          git \
            -c user.name="github-actions[bot]" \
            -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit --allow-empty -am "${{github.event.head_commit.message}} (${{github.sha}})"
          git push origin $BRANCH
